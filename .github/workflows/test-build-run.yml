name: CI/CD Build & Deploy on Self-hosted Server

on:
  push:
    branches:
      - test
jobs:
  build-push:
    runs-on: self-hosted
    env:
      IMAGE_BACKEND: nor5/backend
      IMAGE_FRONTEND: nor5/frontend
    steps:
      - uses: actions/checkout@v3

      - name: Log in to Docker Registry
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      
      - name: Build and push Docker image frontend
        id: docker_frontend_build
        run: |
          IMAGE_FRONTEND_TAG=test-${GITHUB_SHA::7}
          echo "IMAGE_FRONTEND_TAG=$IMAGE_FRONTEND_TAG" >> $GITHUB_ENV
          sudo docker build -t $IMAGE_FRONTEND:$IMAGE_FRONTEND_TAG ./frontend
          sudo docker push $IMAGE_FRONTEND:$IMAGE_FRONTEND_TAG


      - name: Build and push Docker image backend
        id: docker_backend_build
        run: |
          IMAGE_BACKEND_TAG=test-${GITHUB_SHA::7}
          echo "IMAGE_BACKEND_TAG=$IMAGE_BACKEND_TAG" >> $GITHUB_ENV
          sudo docker build -t $IMAGE_BACKEND:$IMAGE_BACKEND_TAG ./backend
          sudo docker push $IMAGE_BACKEND:$IMAGE_BACKEND_TAG
      
     
  deploy-test:
    runs-on: self-hosted
    needs: build-push
    if: github.ref == 'refs/heads/test'
    steps:


      - name: Change backend name image in the compose file
        env:
          IMAGE_NAME_BACKEND: ${{ env.IMAGE_BACKEND }}
          IMAGE_BACKEND_TAG: ${{ env.IMAGE_BACKEND_TAG }}

        run: |
          sed -i "s|image:nor5/backend .*|image: $IMAGE_NAME:$IMAGE_TAG|" compose.test.yml

      - name: Change frontend name image in the compose file
        env:
          IMAGE_FRONTEND: ${{ env.IMAGE_FRONTEND }}
          IMAGE_FRONTEND_TAG: ${{ env.IMAGE_FRONTEND_TAG}}
        run: |
          sed -i "s|image:nor5/frontend .*|image: $IMAGE_FRONTEND:$IMAGE_FRONTEND_TAG|" compose.test.yml
      
      - name: Create .env file
        run: |
          cat > .env <<EOF
          DB_CONNECTION=${{ secret.DB_CONNECTION_TEST }}
          DB_HOST=${{ secret.DB_CONNECTION_TEST }}
          DB_PORT=${{ secret.DB_PORT_TEST }}
          MYSQL_DATABASE=${{ secret.MYSQL_DATABASE_TEST }}
          MYSQL_USER=${{ secret.MYSQL_USER_TEST }}
          MYSQL_PASSWORD=${{ secret.MYSQL_PASSWORD_TEST }}
          MYSQL_ROOT_PASSWORD=${{ secret.MYSQL_PASSWORD_TEST }}
          EOF


      
     
      - name: Cleanup before deployment
        run: |
          sudo docker compose -f compose.test.yml down -v --remove-orphans
          sudo docker image prune -af
          sudo docker volume prune -f
      
      - name: Run Compose
        run: |
         
          sudo docker compose -f compose.test.yml up -d --remove-orphans
          
