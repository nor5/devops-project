

services:
  frontend:
    image: nor5/frontend-latest
      
    container_name: frontend_container
    restart: always
    ports:
      - "5173:5173"


    networks:
      - front-network
    depends_on:
      - backend

  backend:
    image: nor5/backend-latest
      
    container_name: backend_container
    restart: always
    ports:
      - "8000:8000"
    env_file:
      - path: ./backend/.env
   
    environment:
      - DB_CONNECTION=${DB_CONNECTION}
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
      - DB_DATABASE=${DB_DATABASE}
      - DB_USERNAME=${DB_USERNAME}
      - DB_PASSWORD=${DB_PASSWORD}

    command:  php artisan serve --host=0.0.0.0 --port=8000

    networks:
      - db-network
      - front-network
    depends_on:
      mysql:
        condition: service_healthy
 
  adminer:
    image: adminer
    container_name: adminer
    restart: always
    env_file:
      - path : ./backend/.env
    ports:
      - 8080:8080
    
    networks:
      - db-network
    environment:
      - ADMINER_DEFAULT_SERVER=${ADMINER_DEFAULT_SERVER}
      - ADMINER_DESIGN=pepa-linha-dark
    depends_on:
      - mysql
  mysql:
    image: mysql:9.2
    container_name: mysql_db
    ports:
      - "3306:3306"
    env_file:
      - path : ./backend/.env

    volumes:
      - ./bdd/init.sql:/docker-entrypoint-initdb.d/init.sql
      - db_data:/var/lib/mysql
    networks:
      - db-network
    healthcheck:
        test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "${MYSQL_USER}", "-p${MYSQL_PASSWORD}"] # command to run
        interval: 10s # Frequency every 10 seconds
        timeout: 5s # if no response after 5s the test is considred failed 
        retries: 5 # 5 retries before considering the test failed 
        start_period: 30s
  

volumes:
  db_data:
networks:
  db-network:
  front-network:
  